cousera 计算机组成的题～参考了某位前人的思路～

第一题：用系统功能调用实现简单输入输出

利用系统功能调用从键盘输入，转换后在屏幕上显示，具体要求如下：

(1) 如果输入的是字母（A~Z，区分大小写）或数字（0~9），则将其转换成对应的英文单词后在屏幕上显示，对应关系见下表

(2) 若输入的不是字母或数字，则在屏幕上输出字符“*”，

(3) 每输入一个字符，即时转换并在屏幕上显示，

(4) 支持反复输入，直到按“?”键结束程序。

A	Alpha	N	November	1	First	a	alpha	n	november
B	Bravo	O	Oscar	2	Second	b	bravo	o	oscar
C	China	P	Paper	3	Third	c	china	p	paper
D	Delta	Q	Quebec	4	Fourth	d	delta	q	quebec
E	Echo	R	Research	5	Fifth	e	echo	r	research
F	Foxtrot	S	Sierra	6	Sixth	f	foxtrot	s	sierra
G	Golf	T	Tango	7	Seventh	g	golf	t	tango
H	Hotel	U	Uniform	8	Eighth	h	hotel	u	uniform
I	India	V	Victor	9	Ninth	i	india	v	victor
J	Juliet	W	Whisky	0	zero	j	juliet	w	whisky
K	Kilo	X	X-ray			k	kilo	x	x-ray
L	Lima	Y	Yankee			l	lima	y	yankee
M	Mary	Z	Zulu			m	mary	z	zulu


//CODE:

.data
array1:     .asciiz

            "Alpha ","Bravo ","China ","Delta ","Echo ","Foxtrot ",

            "Golf ","Hotel ","India ","Juliet ","Kilo ","Lima ",

            "Mary ","November ","Oscar ","Paper ","Quebec ","Research ",

            "Sierra ","Tango ","Uniform ","Victor ","Whisky ","X-ray ",

            "Yankee ","Zulu "

index1:  .word

            0,7,14,21,28,34,43,49,56,63,71,

            77,83,89,99,106,113,121,131,

            139,146,155,163,171,178,186

array2:     .asciiz

            "alpha ","bravo ","china ","delta ","echo ","foxtrot ",

            "golf ","hotel ","india ","juliet ","kilo ","lima ",

            "mary ","november ","oscar ","paper ","quebec ","research ",

            "sierra ","tango ","uniform ","victor ","whisky ","x-ray ",

            "yankee ","zulu "

index2:  .word

            0,7,14,21,28,34,43,49,56,63,71,

            77,83,89,99,106,113,121,131,

            139,146,155,163,171,178,186

number:     .asciiz

            "Zero ", "First ", "Second ", "Third ", "Fourth ",

            "Fifth ", "Sixth ", "Seventh ","Eighth ","Ninth "

index3:   .word

            0,6,13,21,28,36,43,50,59,67

           

        .text

main:   li $v0,12

        syscall

        sub $t1, $v0, 63 # is '?" ?

        beqz $t1, exit

ll:     j islower

 

# 判断v0是否在t1~t2之间

judege:        sub $t3, $v0, $t2     

                       subi $t3, $t3, 1       # let the range of t3 between -1 and -26

                       slt $t3, $t3, $0      

                       sub $t4, $t1, $v0     

                       subi $t4, $t4, 1

                       slt $t4, $t4, $0      

                       and $t5, $t3, $t4

                       jr $31

       

islower:       li $t1, 'a'

                       li $t2, 'z'

                       jal judege

                       beqz $t5, isupper     

                       sub $t6, $v0, $t1      # t6 = v0 - 'a'

                       sll $t6, $t6, 2

                       la  $s0, index2

                       add $s0, $s0, $t6

                       lw $s1, ($s0)

                       la $a0, array2

                       add $a0, $s1, $a0

                       li $v0, 4

                       syscall

                       j main 

                      

 

isupper:       li $t1, 'A'

                       li $t2, 'Z'

                       jal judege

                       beqz $t5, isnum

                       sub $t6, $v0, $t1

                       sll $t6, $t6, 2

                       la  $s0, index2

                       add $s0, $s0, $t6

                       lw $s1, ($s0)

                       la $a0, array1

                       add $a0, $s1, $a0

                       li $v0, 4

                       syscall

                       j main

              

isnum:         li $t1, '0'

                       li $t2, '9'

                       jal judege

                       beqz $t5, other

                       sub $t6, $v0, $t1

                       sll $t6, $t6, 2

                       la  $s0, index3

                       add $s0, $s0, $t6

                       lw $s1, ($s0)

                       la $a0, number

                       add $a0, $s1, $a0

                       li $v0, 4

                       syscall

                       j main

                                                                                                                                  

other:         li $a0, '*'

                       la $v0, 11

                       syscall

                       j main                                                                                                                                                                                                                                                                                                                                                      

       

exit:   li $v0, 10    
